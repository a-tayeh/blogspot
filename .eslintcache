[{"/home/antarma/Desktop/brightspot/src/index.js":"1","/home/antarma/Desktop/brightspot/src/App.jsx":"2","/home/antarma/Desktop/brightspot/src/reportWebVitals.js":"3","/home/antarma/Desktop/brightspot/src/components/blog.jsx":"4","/home/antarma/Desktop/brightspot/src/firebase.js":"5","/home/antarma/Desktop/brightspot/src/components/Login.js":"6","/home/antarma/Desktop/brightspot/src/Routes/CreatePost.js":"7","/home/antarma/Desktop/brightspot/src/Routes/my-posts.jsx":"8","/home/antarma/Desktop/brightspot/src/Routes/home.jsx":"9","/home/antarma/Desktop/brightspot/src/components/NewPost.jsx":"10","/home/antarma/Desktop/brightspot/src/components/current-post.tsx":"11","/home/antarma/Desktop/brightspot/src/comments.tsx":"12"},{"size":555,"mtime":1611458277054,"results":"13","hashOfConfig":"14"},{"size":2410,"mtime":1611888462608,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611246778154,"results":"16","hashOfConfig":"14"},{"size":1295,"mtime":1612563035132,"results":"17","hashOfConfig":"14"},{"size":531,"mtime":1611251760780,"results":"18","hashOfConfig":"14"},{"size":1511,"mtime":1612563422684,"results":"19","hashOfConfig":"14"},{"size":190,"mtime":1611431137508,"results":"20","hashOfConfig":"14"},{"size":3141,"mtime":1613583696029,"results":"21","hashOfConfig":"14"},{"size":2711,"mtime":1613004672558,"results":"22","hashOfConfig":"14"},{"size":3967,"mtime":1613583269601,"results":"23","hashOfConfig":"14"},{"size":6088,"mtime":1613583448876,"results":"24","hashOfConfig":"14"},{"size":1754,"mtime":1613520682372,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17l141a",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"/home/antarma/Desktop/brightspot/src/index.js",[],["60","61"],"/home/antarma/Desktop/brightspot/src/App.jsx",["62","63","64"],"import React, { useState, useEffect } from \"react\";\nimport fire from \"./firebase\";\nimport Login from \"./components/Login\";\nimport \"./App.css\";\nimport { Blog } from \"./components/blog.jsx\";\n\nexport const App = () => {\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignUp = () => {\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {user ? (\n        <Blog handleLogout={handleLogout} />\n      ) : (\n        <Login\n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n          handleSignUp={handleSignUp}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n        />\n      )}\n    </div>\n  );\n};\n","/home/antarma/Desktop/brightspot/src/reportWebVitals.js",[],"/home/antarma/Desktop/brightspot/src/components/blog.jsx",["65"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport CreatePost from \"../Routes/CreatePost\";\nimport { MyPosts } from \"../Routes/my-posts\";\nimport { Home } from \"../Routes/home\";\n\nexport const Blog = ({ handleLogout }) => {\n  return (\n    <section className=\"blog\">\n      <Router>\n        <nav>\n          <Link to=\"/home\">\n            <h3 className=\"blog-right\">BLOG SPOT</h3>\n          </Link>\n\n          <Link to=\"/create-post\">\n            <h3 className=\"blog-right\">Create Post</h3>\n          </Link>\n\n          <Link to=\"/my-posts\">\n            <h3 className=\"blog-right\">My Posts</h3>\n          </Link>\n          <h3 className=\"blog-right\" onClick={handleLogout}>\n            {\" \"}\n            Logout\n          </h3>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/create-post\">\n            <CreatePost />\n          </Route>\n\n          <Route exact path=\"/my-posts\">\n            <MyPosts />\n          </Route>\n          <Route exact path=\"/home\">\n            <Home />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          {/* <Route exact path=\"/\">\n            <Blog />\n          </Route> */}\n        </Switch>\n      </Router>\n    </section>\n  );\n};\n","/home/antarma/Desktop/brightspot/src/firebase.js",[],"/home/antarma/Desktop/brightspot/src/components/Login.js",[],"/home/antarma/Desktop/brightspot/src/Routes/CreatePost.js",[],"/home/antarma/Desktop/brightspot/src/Routes/my-posts.jsx",["66","67","68","69","70","71","72","73"],"import { queryAllByDisplayValue } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { CurrentPost } from \"../components/current-post\";\nimport firebase from \"../firebase\";\n\nexport const MyPosts = () => {\n  const [posts, setPosts] = React.useState([]);\n  const [viewPost, setViewPost] = React.useState(false);\n  const [articlePage, setArticlePage] = React.useState(\"\");\n  const [selectedPost, setSelectedPost] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState();\n  React.useEffect(() => {\n    setCurrentUser(firebase?.auth()?.currentUser?.email);\n    fetch(\"http://localhost:3014/getBlogPosts\", {\n      method: \"GET\",\n      headers: {\n        //accepts json\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json()) //converts to json\n      .then(\n        (result) => {\n          const newData = result[0].blogPosts;\n          setPosts(newData);\n        },\n        (error) => {\n          console.log(\"bro we got an error \" + error);\n        }\n      );\n    \n  }, []);\n\n  const handleClickedPost = (data) => {\n    setSelectedPost({\n      cardTitle: data.cardTitle,\n      cardDate: data.cardDate,\n      cardBody: data.cardBody,\n      author: data.author,\n      postId: data.postId,\n    });\n    setViewPost(true);\n    document\n    ?.getElementById(\"blogPic\")\n    ?.setAttribute(\n      \"src\",\n      `http://localhost:3014/getPic`\n    );\n  };\n  return !viewPost ? (\n    <div className=\"my-posts-container\">\n      {posts.map(\n        (post) =>\n          post.author === currentUser && (\n            <div\n              onClick={() =>\n                handleClickedPost({\n                  cardTitle: post.title,\n                  cardDate: post.date,\n                  cardBody: post.contents,\n                  author: post.author || \"\",\n                  postId: post.postId,\n                })\n              }\n            >\n              <br></br>\n              <Card>\n                <Card.Img variant=\"top\" src=\"\" id=\"blogPic\"/> \n                <Card.Body>\n                  <Card.Title>{post?.title}</Card.Title>\n                  <p>{new Date(post?.date)?.toDateString()}</p>\n                  <p>{post?.author?.length > 0 ? post?.author : \"\"}</p>\n                  <Card.Text className=\"text-truncate\" line={4}>\n                    {\" \"}\n                    <button class=\"content-button\">\n                      {post?.contents}\n                    </button>{\" \"}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n              <br></br>\n            </div>\n          )\n      )}\n    </div>\n  ) : (\n    <div className=\"container\">\n      <button class=\"goBack\" onClick={() => setViewPost(false)}>\n        Back\n      </button>\n      <CurrentPost\n        cardBody={selectedPost.cardBody}\n        cardTitle={selectedPost.cardTitle}\n        cardDate={selectedPost.cardDate}\n        author={selectedPost.author}\n        postId={selectedPost.postId}\n      />\n    </div>\n  );\n};\n","/home/antarma/Desktop/brightspot/src/Routes/home.jsx",["74","75","76","77","78","79","80","81"],"import { queryAllByDisplayValue } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { CurrentPost } from \"../components/current-post\";\nimport \"../../src/Box.css\";\n\nexport const Home = () => {\n  const [posts, setPosts] = React.useState([]);\n  const [viewPost, setViewPost] = React.useState(false);\n  const [articlePage, setArticlePage] = React.useState(\"\");\n  const [selectedPost, setSelectedPost] = React.useState({});\n  React.useEffect(() => {\n    fetch(\"http://localhost:3014/getBlogPosts\", {\n      method: \"GET\",\n      headers: {\n        //accepts json\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json()) //converts to json\n      .then(\n        (result) => {\n          const newData = result[0].blogPosts;\n          setPosts(newData);\n        },\n        (error) => {\n          console.log(\"bro we got an error \" + error);\n        }\n      );\n  }, []);\n\n  const logo = require(\"../logo.svg\");\n\n  const handleClickedPost = (data) => {\n    setSelectedPost({\n      cardTitle: data.cardTitle,\n      cardDate: data.cardDate,\n      cardBody: data.cardBody,\n      author: data.author,\n      postId: data.postId,\n    });\n    setViewPost(true);\n  };\n  return !viewPost ? (\n    <div className=\"grid\">\n      {posts.map((post) => (\n        <div\n          onClick={() =>\n            handleClickedPost({\n              cardTitle: post.title,\n              cardDate: post.date,\n              cardBody: post.contents,\n              author: post.author || \"\",\n              postId: post.postId,\n            })\n          }\n        >\n          <div class=\"box\">\n            <Card>\n              <Card.Img variant=\"top\" src={logo} />\n              <Card.Body>\n                <Card.Title>{post.title}</Card.Title>\n                <p>{new Date(post.date)?.toDateString()}</p>\n                <p>{post?.author?.length > 0 ? post.author : \"\"}</p>\n                <Card.Text className=\"text-truncate\">\n                  {\" \"}\n                  <button class=\"content-button\">{post.contents}</button>{\" \"}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </div>\n        </div>\n      ))}\n    </div>\n  ) : (\n    <div className=\"container\">\n      <button class=\"goBack\" onClick={() => setViewPost(false)}>\n        Back\n      </button>\n      <CurrentPost\n        cardBody={selectedPost.cardBody}\n        cardTitle={selectedPost.cardTitle}\n        cardDate={selectedPost.cardDate}\n        author={selectedPost.author}\n        postId={selectedPost.postId}\n      />\n    </div>\n  );\n};\n","/home/antarma/Desktop/brightspot/src/components/NewPost.jsx",["82","83","84"],"import React from \"react\";\nimport firebase from \"../firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const NewPost = () => {\n  const [postData, setPostData] = React.useState([]);\n  const [titleName, setTitleName] = React.useState(\"\");\n  const [newContent, setNewContent] = React.useState(\"\");\n  const [showPost, setPost] = React.useState(false);\n  const currDate = Date().toLocaleString();\n  // const [selectedSite, setSelectedSite] = React.useState({});\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:3014/getBlogPosts\", {\n      method: \"GET\",\n      headers: {\n        //accepts json\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json()) //converts to json\n      .then(\n        (result) => {\n          const newData = result[0].blogPosts;\n          setPostData(newData);\n        },\n        (error) => {\n          console.log(\"bro we got an error \" + error);\n        }\n      );\n  }, []); // [] = runs code before the component\n\n  const onTitleChange = (event) => {\n    setTitleName(event.target.value);\n  };\n  const onContentChange = (event) => {\n    setNewContent(event.target.value);\n  };\n  const history = useHistory();\n\n  const addPost = (event) => {\n    const author = firebase.auth().currentUser.email;\n\n    const data = {\n      postId:\n        postData?.length > 0 ? postData[postData?.length - 1].postId + 1 : 1,\n      title: titleName,\n      contents: newContent,\n      date: currDate,\n      author: author,\n    };\n    fetch(\"http://localhost:3014/sendBlogPosts\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then(\n      (result) => {\n        console.log(\"data sent successfully\");\n      },\n      (error) => {\n        console.log(\"bro we got an error \" + error);\n      }\n    );\n    window.open(\"http://localhost:3000/my-posts\");\n  };\n  const uploadPic = (e) => {\n    e.preventDefault();\n    const file = document.getElementById(\"inputGroupFile01\").files;\n    let formData = new FormData();\n    formData.append('blogImg', file[0]);\n    Object.defineProperty(file[0], 'name', {\n      writable: true,\n      value: `${postData?.length > 0 ? postData[postData?.length - 1].postId + 1 : 1}-pic`\n    });\n    fetch(\"http://localhost:3014/uploadPic\", { method: \"POST\", body: formData }).then(\n      (r) => {\n        console.log(r);\n      }\n    );\n    console.log(file[0]);\n  };\n\n  \n  return (\n    <div className=\"justify-center\">\n      <form>\n        <h1>Create New Post</h1>\n        <p> Date posted: {currDate}</p>\n        <br></br>\n        <div className=\"input-group mb-3\">\n          {\" \"}\n          <div className=\"custom-file\">\n            {\" \"}\n            <input\n              type=\"file\"\n              className=\"imageInput\"\n              id=\"inputGroupFile01\"\n              aria-describedby=\"inputGroupFileAddon01\"\n              name = \"blogImg\"\n          \n            />{\" \"}\n            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\"     style={{width: \"640px\"}}>\n              {\" \"}\n              Choose file{\" \"}\n            </label>{\" \"}\n          </div>{\" \"}\n        </div>{\" \"}\n        <button type=\"button\" className=\"btn btn-primary\" onClick={uploadPic} style={{width: \"640px\"}}>\n          {\" \"}\n          Upload{\" \"}\n        </button>{\" \"}\n\n        <input\n          className=\"title\"\n          type=\"text\"\n          placeholder=\"title\"\n          size=\"39\"\n          required\n          onChange={onTitleChange}\n        />\n        <br />\n        <br />\n        <textarea\n          className=\"content\"\n          placeholder=\"contents\"\n          rows=\"8\"\n          cols=\"41\"\n          required\n          onChange={onContentChange}\n        ></textarea>\n        <br />\n        <br />\n        <button className=\"btn-save\" onClick={addPost}>\n          Save Post\n        </button>\n      </form>\n    </div>\n  );\n};\n","/home/antarma/Desktop/brightspot/src/components/current-post.tsx",["85","86","87","88","89","90"],"import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport firebase from \"../firebase\";\nimport { Comments } from \"../comments\";\n\ntype props = {\n  cardBody: string;\n  cardTitle: string;\n  cardDate: string;\n  author: string;\n  postId: string;\n};\nexport const CurrentPost: React.FC<props> = ({\n  cardBody,\n  cardTitle,\n  cardDate,\n  author,\n  postId,\n}) => {\n  // const [commentData, setCommentData] = React.useState([]);\n  const [postData, setPostData] = React.useState([]);\n  const [newComment, setComment] = React.useState(\"[]\");\n  const [newContent, setContent] = React.useState({ content: cardBody });\n  const [newTitle, setTitle] = React.useState({ title: cardTitle });\n  const currDate = Date().toLocaleString();\n  const [edit, setEdit] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState<any>();\n  const [comments, setcomments] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:3014/getBlogPosts\", {\n      method: \"GET\",\n      headers: {\n        //accepts json\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json()) //converts to json\n      .then(\n        (result) => {\n          const newData = result[0].blogPosts;\n          setPostData(newData);\n        },\n        (error) => {\n          console.log(\"bro we got an error \" + error);\n        }\n      );\n      const currentUser = firebase?.auth()?.currentUser?.email;\n    setCurrentUser(currentUser);\n\n    const data = { postId: postId };\n    fetch(\"http://localhost:3014/getPostComment\", {\n      method: \"POST\",\n      headers: {\n        //accepts json\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json()) //converts to json\n      .then(\n        (result) => {\n          const newData = result;\n          setcomments(newData);\n        },\n        (error) => {\n          console.log(\"bro we got an error \" + error);\n        }\n      );\n          document\n            ?.getElementById(\"blogPic\")\n            ?.setAttribute(\n              \"src\",\n              `http://localhost:3014/getPic`\n            );\n\n  }, []); // [] = runs code before the component\n\n  const onContentChange = (event: any) => {\n    setContent({ ...newContent, content: event.target.value });\n  };\n  const onCommentChange = (event: any) => {\n    setComment(event.target.value);\n  };\n  const onSave = () => {\n    const newBlogData={postId:postId, newContents:newContent};\n    fetch(\"http://localhost:3014/updatePosts\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newBlogData),\n    }).then(\n      (result) => {\n        console.log(\"data sent successfully\");\n      },\n      (error) => {\n        console.log(\"bro we got an error \" + error);\n      }\n    );\n\n    setEdit(false);\n   \n  };\n  const addComment = (event: any) => {\n    const author = firebase.auth().currentUser?.email;\n\n    const data = {\n      commentData: { comment: newComment, date: currDate, author: author, commentId:comments.length>0 ? comments?.length+1:1 },\n\n      postID: postId,\n    };\n    fetch(\"http://localhost:3014/addComments\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then(\n      (result) => {\n        console.log(\"data sent successfully\");\n        window.location.reload(true);\n      },\n      (error) => {\n        console.log(\"bro we got an error \" + error);\n      }\n    );\n  };\n\n  const onDelete=()=>{\n    const deleteData={postId:postId};\n    fetch(\"http://localhost:3014/removePosts\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(deleteData),\n    }).then(\n      (result) => {\n        console.log(\"data sent successfully\");\n        window.location.reload(true);\n      },\n      (error) => {\n        console.log(\"bro we got an error \" + error);\n      }\n    );\n  }\n\n\n  const date = new Date(cardDate);\n  return !edit ? (\n    <div className=\"container\">\n      <br></br>\n      <button onClick={onDelete}  className=\"btn-delete\">Delete Post</button>\n      <button className=\"btn-edit\" onClick={() => setEdit(true)}>Edit</button>\n      <h3>{cardTitle}</h3>\n      <img src=\"\" id=\"blogPic\"/>\n      <h4>{date?.toDateString()}</h4>\n      <h4>{author}</h4>\n      <p>{newContent.content}</p>\n      \n      \n      <div>\n        <br></br>\n        <br></br>\n        <textarea\n          className=\"center\"\n          placeholder=\"comment\"\n          onChange={onCommentChange}\n        ></textarea>\n        <br></br>\n        <button className=\"post\" onClick={addComment}>\n          {\" \"}\n          post\n        </button>\n        <br></br>\n        <br></br>\n        <br></br>\n      </div>\n      <br></br>\n      <div>\n        <Comments  comments = {comments} currentUser={currentUser} postId={postId}/>\n      </div>\n    </div>\n  ) : (\n    <div className=\"container\">\n      <br></br>\n      <button className=\"btn-save\" onClick={onSave}>Save</button>\n      <button className=\"btn-cancel\" onClick={() => setEdit(false)}>Cancel</button>\n      <input value ={cardTitle} onChange={(event) => onContentChange(event)}/>\n      <h4>{date?.toDateString()}</h4>\n      <h4>{author}</h4>\n      <textarea onChange={(event) => onContentChange(event)}>\n        {newContent.content}\n      </textarea>\n      <div>\n        <br></br>\n        <br></br>\n        <textarea\n          className=\"center\"\n          placeholder=\"comment\"\n          onChange={onCommentChange}\n        ></textarea>\n        <br></br>\n        <button className=\"post\" onClick={addComment}>\n          {\" \"}\n          post\n        </button>\n        <br></br>\n        <br></br>\n        <br></br>\n      </div>\n      <br></br>\n      <div>\n      <Comments  comments = {comments} currentUser={currentUser} postId={postId}/>\n      </div>\n    </div>\n  );\n};\n",["91","92"],"/home/antarma/Desktop/brightspot/src/comments.tsx",["93","94","95","96","97"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport firebase from \"../src/firebase\";\n\ntype props = {\n  comments: any;\n  currentUser:any;\n  postId:string;\n};\nexport const Comments: React.FC<props> = ({ comments,currentUser,postId }) => {\n  const [viewcomment, setViewcomment] = React.useState(false);\n  const [articlePage, setArticlePage] = React.useState(\"\");\n  //   const [selectedcomment, setSelectedcomment] = React.useState({});\n  \n  const onDelete=(commentId:string)=>{\n    const deleteData={commentId:commentId,postId:postId};\n    fetch(\"http://localhost:3014/removeComments\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(deleteData),\n    }).then(\n      (result) => {\n        console.log(\"data sent successfully\");\n        window.location.reload(true);\n      },\n      (error) => {\n        console.log(\"bro we got an error \" + error);\n      }\n    );\n  }\n  return (\n    <div className=\"container\">\n      {comments.map((comment: any) => (\n        <div> \n          <Card className=\"comment\">\n            {comment.author === currentUser && <button onClick= {()=>onDelete(comment.commentId)}>Delete</button>}\n\n            <Card.Body>\n              {/* <Card.Title>{comment.title}</Card.Title> */}\n              <p>{new Date(comment?.date)?.toDateString()}</p>\n              <p>{comment?.author?.length > 0 ? comment.author : \"\"}</p>\n              <Card.Text>\n                {comment?.comment}\n                {/* {\" \"}\n                <button class=\"content-button\">{comment.contents}</button>{\" \"} */}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n",["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":30,"column":9,"nodeType":"106","messageId":"107","endLine":39,"endColumn":10},{"ruleId":"104","severity":1,"message":"105","line":49,"column":9,"nodeType":"106","messageId":"107","endLine":57,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":78,"column":6,"nodeType":"110","endLine":78,"endColumn":8,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"116","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":32},{"ruleId":"112","severity":1,"message":"117","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":16},{"ruleId":"112","severity":1,"message":"118","line":4,"column":27,"nodeType":"114","messageId":"115","endLine":4,"endColumn":33},{"ruleId":"112","severity":1,"message":"119","line":4,"column":35,"nodeType":"114","messageId":"115","endLine":4,"endColumn":41},{"ruleId":"112","severity":1,"message":"120","line":4,"column":43,"nodeType":"114","messageId":"115","endLine":4,"endColumn":48},{"ruleId":"112","severity":1,"message":"121","line":4,"column":50,"nodeType":"114","messageId":"115","endLine":4,"endColumn":54},{"ruleId":"112","severity":1,"message":"122","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":21},{"ruleId":"112","severity":1,"message":"123","line":11,"column":23,"nodeType":"114","messageId":"115","endLine":11,"endColumn":37},{"ruleId":"112","severity":1,"message":"116","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":32},{"ruleId":"112","severity":1,"message":"117","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":16},{"ruleId":"112","severity":1,"message":"118","line":4,"column":27,"nodeType":"114","messageId":"115","endLine":4,"endColumn":33},{"ruleId":"112","severity":1,"message":"119","line":4,"column":35,"nodeType":"114","messageId":"115","endLine":4,"endColumn":41},{"ruleId":"112","severity":1,"message":"120","line":4,"column":43,"nodeType":"114","messageId":"115","endLine":4,"endColumn":48},{"ruleId":"112","severity":1,"message":"121","line":4,"column":50,"nodeType":"114","messageId":"115","endLine":4,"endColumn":54},{"ruleId":"112","severity":1,"message":"122","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":21},{"ruleId":"112","severity":1,"message":"123","line":11,"column":23,"nodeType":"114","messageId":"115","endLine":11,"endColumn":37},{"ruleId":"112","severity":1,"message":"124","line":9,"column":10,"nodeType":"114","messageId":"115","endLine":9,"endColumn":18},{"ruleId":"112","severity":1,"message":"125","line":9,"column":20,"nodeType":"114","messageId":"115","endLine":9,"endColumn":27},{"ruleId":"112","severity":1,"message":"126","line":40,"column":9,"nodeType":"114","messageId":"115","endLine":40,"endColumn":16},{"ruleId":"127","severity":1,"message":"117","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":21,"column":10,"nodeType":"114","messageId":"115","endLine":21,"endColumn":18},{"ruleId":"127","severity":1,"message":"129","line":24,"column":10,"nodeType":"114","messageId":"115","endLine":24,"endColumn":18},{"ruleId":"127","severity":1,"message":"130","line":24,"column":20,"nodeType":"114","messageId":"115","endLine":24,"endColumn":28},{"ruleId":"108","severity":1,"message":"131","line":79,"column":6,"nodeType":"110","endLine":79,"endColumn":8,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":162,"column":7,"nodeType":"135","endLine":162,"endColumn":33},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"127","severity":1,"message":"136","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":16},{"ruleId":"127","severity":1,"message":"137","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":21},{"ruleId":"127","severity":1,"message":"138","line":11,"column":23,"nodeType":"114","messageId":"115","endLine":11,"endColumn":37},{"ruleId":"127","severity":1,"message":"122","line":12,"column":10,"nodeType":"114","messageId":"115","endLine":12,"endColumn":21},{"ruleId":"127","severity":1,"message":"123","line":12,"column":23,"nodeType":"114","messageId":"115","endLine":12,"endColumn":37},{"ruleId":"100","replacedBy":"139"},{"ruleId":"102","replacedBy":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["143"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'queryAllByDisplayValue' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'articlePage' is assigned a value but never used.","'setArticlePage' is assigned a value but never used.","'showPost' is assigned a value but never used.","'setPost' is assigned a value but never used.","'history' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'postData' is assigned a value but never used.","'newTitle' is assigned a value but never used.","'setTitle' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["144"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'firebase' is defined but never used.","'viewcomment' is assigned a value but never used.","'setViewcomment' is assigned a value but never used.",["141"],["142"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [authListener]",{"range":"149","text":"150"},"Update the dependencies array to be: [postId]",{"range":"151","text":"152"},[1898,1900],"[authListener]",[2218,2220],"[postId]"]