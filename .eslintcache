[{"/home/antarma/brightspot/src/index.js":"1","/home/antarma/brightspot/src/reportWebVitals.js":"2","/home/antarma/brightspot/src/firebase.js":"3","/home/antarma/brightspot/src/components/Login.js":"4","/home/antarma/brightspot/src/Routes/CreatePost.js":"5","/home/antarma/brightspot/src/components/NewPost.jsx":"6","/home/antarma/brightspot/src/App.jsx":"7","/home/antarma/brightspot/src/components/blog.jsx":"8","/home/antarma/brightspot/src/Routes/my-posts.jsx":"9","/home/antarma/brightspot/src/Routes/home.jsx":"10","/home/antarma/brightspot/src/components/current-post.tsx":"11","/home/antarma/brightspot/src/comments.tsx":"12"},{"size":555,"mtime":1611458277054,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611246778154,"results":"15","hashOfConfig":"14"},{"size":531,"mtime":1611251760780,"results":"16","hashOfConfig":"14"},{"size":1511,"mtime":1612563422684,"results":"17","hashOfConfig":"14"},{"size":190,"mtime":1611431137508,"results":"18","hashOfConfig":"14"},{"size":2754,"mtime":1612636078819,"results":"19","hashOfConfig":"14"},{"size":2410,"mtime":1611888462608,"results":"20","hashOfConfig":"14"},{"size":1295,"mtime":1612563035132,"results":"21","hashOfConfig":"14"},{"size":3019,"mtime":1613004609413,"results":"22","hashOfConfig":"14"},{"size":2711,"mtime":1613004672558,"results":"23","hashOfConfig":"14"},{"size":3847,"mtime":1613008460343,"results":"24","hashOfConfig":"14"},{"size":1946,"mtime":1612637094018,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1rahjk5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"/home/antarma/brightspot/src/index.js",[],["58","59"],"/home/antarma/brightspot/src/reportWebVitals.js",[],"/home/antarma/brightspot/src/firebase.js",[],"/home/antarma/brightspot/src/components/Login.js",[],"/home/antarma/brightspot/src/Routes/CreatePost.js",[],"/home/antarma/brightspot/src/components/NewPost.jsx",["60","61","62"],"import React from \"react\";\nimport firebase from \"../firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const NewPost = () => {\n  const [postData, setPostData] = React.useState([]);\n  const [titleName, setTitleName] = React.useState(\"\");\n  const [newContent, setNewContent] = React.useState(\"\");\n  const [showPost, setPost] = React.useState(false);\n  const currDate = Date().toLocaleString();\n  // const [selectedSite, setSelectedSite] = React.useState({});\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:3014/getBlogPosts\", {\n      method: \"GET\",\n      headers: {\n        //accepts json\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json()) //converts to json\n      .then(\n        (result) => {\n          const newData = result[0].blogPosts;\n          setPostData(newData);\n        },\n        (error) => {\n          console.log(\"bro we got an error \" + error);\n        }\n      );\n  }, []); // [] = runs code before the component\n\n  const onTitleChange = (event) => {\n    setTitleName(event.target.value);\n  };\n  const onContentChange = (event) => {\n    setNewContent(event.target.value);\n  };\n  const history = useHistory();\n\n  const addPost = (event) => {\n    const author = firebase.auth().currentUser.email;\n\n    const data = {\n      postId:\n        postData?.length > 0 ? postData[postData?.length - 1].postId + 1 : 1,\n      title: titleName,\n      contents: newContent,\n      date: currDate,\n      author: author,\n    };\n    fetch(\"http://localhost:3014/sendBlogPosts\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then(\n      (result) => {\n        console.log(\"data sent successfully\");\n      },\n      (error) => {\n        console.log(\"bro we got an error \" + error);\n      }\n    );\n    window.open(\"http://localhost:3000/my-posts\");\n  };\n\n  return (\n    <div className=\"justify-center\">\n      <form>\n        <h1>Create New Post</h1>\n        <input type=\"file\" className=\"filetype\" id=\"group_image\" />\n        <p> Date posted: {currDate}</p>\n        <br></br>\n        <input\n          className=\"title\"\n          type=\"text\"\n          placeholder=\"title\"\n          size=\"39\"\n          required\n          onChange={onTitleChange}\n        />\n        <br />\n        <br />\n        <textarea\n          className=\"content\"\n          placeholder=\"contents\"\n          rows=\"8\"\n          cols=\"41\"\n          required\n          onChange={onContentChange}\n        ></textarea>\n        <br />\n        <br />\n        <button className=\"btn-save\" onClick={addPost}>\n          Save Post\n        </button>\n      </form>\n    </div>\n  );\n};\n","/home/antarma/brightspot/src/App.jsx",["63","64","65"],"import React, { useState, useEffect } from \"react\";\nimport fire from \"./firebase\";\nimport Login from \"./components/Login\";\nimport \"./App.css\";\nimport { Blog } from \"./components/blog.jsx\";\n\nexport const App = () => {\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignUp = () => {\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {user ? (\n        <Blog handleLogout={handleLogout} />\n      ) : (\n        <Login\n          email={email}\n          setEmail={setEmail}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n          handleSignUp={handleSignUp}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n        />\n      )}\n    </div>\n  );\n};\n","/home/antarma/brightspot/src/components/blog.jsx",["66"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport CreatePost from \"../Routes/CreatePost\";\nimport { MyPosts } from \"../Routes/my-posts\";\nimport { Home } from \"../Routes/home\";\n\nexport const Blog = ({ handleLogout }) => {\n  return (\n    <section className=\"blog\">\n      <Router>\n        <nav>\n          <Link to=\"/home\">\n            <h3 className=\"blog-right\">BLOG SPOT</h3>\n          </Link>\n\n          <Link to=\"/create-post\">\n            <h3 className=\"blog-right\">Create Post</h3>\n          </Link>\n\n          <Link to=\"/my-posts\">\n            <h3 className=\"blog-right\">My Posts</h3>\n          </Link>\n          <h3 className=\"blog-right\" onClick={handleLogout}>\n            {\" \"}\n            Logout\n          </h3>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/create-post\">\n            <CreatePost />\n          </Route>\n\n          <Route exact path=\"/my-posts\">\n            <MyPosts />\n          </Route>\n          <Route exact path=\"/home\">\n            <Home />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          {/* <Route exact path=\"/\">\n            <Blog />\n          </Route> */}\n        </Switch>\n      </Router>\n    </section>\n  );\n};\n","/home/antarma/brightspot/src/Routes/my-posts.jsx",["67","68","69","70","71","72","73","74"],"import { queryAllByDisplayValue } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { CurrentPost } from \"../components/current-post\";\nimport firebase from \"../firebase\";\n\nexport const MyPosts = () => {\n  const [posts, setPosts] = React.useState([]);\n  const [viewPost, setViewPost] = React.useState(false);\n  const [articlePage, setArticlePage] = React.useState(\"\");\n  const [selectedPost, setSelectedPost] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState();\n  React.useEffect(() => {\n    setCurrentUser(firebase?.auth()?.currentUser?.email);\n    fetch(\"http://localhost:3014/getBlogPosts\", {\n      method: \"GET\",\n      headers: {\n        //accepts json\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json()) //converts to json\n      .then(\n        (result) => {\n          const newData = result[0].blogPosts;\n          setPosts(newData);\n        },\n        (error) => {\n          console.log(\"bro we got an error \" + error);\n        }\n      );\n  }, []);\n\n  const handleClickedPost = (data) => {\n    setSelectedPost({\n      cardTitle: data.cardTitle,\n      cardDate: data.cardDate,\n      cardBody: data.cardBody,\n      author: data.author,\n      postId: data.postId,\n    });\n    setViewPost(true);\n  };\n  return !viewPost ? (\n    <div className=\"my-posts-container\">\n      {posts.map(\n        (post) =>\n          post.author === currentUser && (\n            <div\n              onClick={() =>\n                handleClickedPost({\n                  cardTitle: post.title,\n                  cardDate: post.date,\n                  cardBody: post.contents,\n                  author: post.author || \"\",\n                  postId: post.postId,\n                })\n              }\n            >\n              <br></br>\n              <Card>\n                <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n                <Card.Body>\n                  <Card.Title>{post?.title}</Card.Title>\n                  <p>{new Date(post?.date)?.toDateString()}</p>\n                  <p>{post?.author?.length > 0 ? post?.author : \"\"}</p>\n                  <Card.Text className=\"text-truncate\" line={4}>\n                    {\" \"}\n                    <button class=\"content-button\">\n                      {post?.contents}\n                    </button>{\" \"}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n              <br></br>\n            </div>\n          )\n      )}\n    </div>\n  ) : (\n    <div className=\"container\">\n      <button class=\"goBack\" onClick={() => setViewPost(false)}>\n        Back\n      </button>\n      <CurrentPost\n        cardBody={selectedPost.cardBody}\n        cardTitle={selectedPost.cardTitle}\n        cardDate={selectedPost.cardDate}\n        author={selectedPost.author}\n        postId={selectedPost.postId}\n      />\n    </div>\n  );\n};\n","/home/antarma/brightspot/src/Routes/home.jsx",["75","76","77","78","79","80","81","82"],"import { queryAllByDisplayValue } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { CurrentPost } from \"../components/current-post\";\nimport \"../../src/Box.css\";\n\nexport const Home = () => {\n  const [posts, setPosts] = React.useState([]);\n  const [viewPost, setViewPost] = React.useState(false);\n  const [articlePage, setArticlePage] = React.useState(\"\");\n  const [selectedPost, setSelectedPost] = React.useState({});\n  React.useEffect(() => {\n    fetch(\"http://localhost:3014/getBlogPosts\", {\n      method: \"GET\",\n      headers: {\n        //accepts json\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json()) //converts to json\n      .then(\n        (result) => {\n          const newData = result[0].blogPosts;\n          setPosts(newData);\n        },\n        (error) => {\n          console.log(\"bro we got an error \" + error);\n        }\n      );\n  }, []);\n\n  const logo = require(\"../logo.svg\");\n\n  const handleClickedPost = (data) => {\n    setSelectedPost({\n      cardTitle: data.cardTitle,\n      cardDate: data.cardDate,\n      cardBody: data.cardBody,\n      author: data.author,\n      postId: data.postId,\n    });\n    setViewPost(true);\n  };\n  return !viewPost ? (\n    <div className=\"grid\">\n      {posts.map((post) => (\n        <div\n          onClick={() =>\n            handleClickedPost({\n              cardTitle: post.title,\n              cardDate: post.date,\n              cardBody: post.contents,\n              author: post.author || \"\",\n              postId: post.postId,\n            })\n          }\n        >\n          <div class=\"box\">\n            <Card>\n              <Card.Img variant=\"top\" src={logo} />\n              <Card.Body>\n                <Card.Title>{post.title}</Card.Title>\n                <p>{new Date(post.date)?.toDateString()}</p>\n                <p>{post?.author?.length > 0 ? post.author : \"\"}</p>\n                <Card.Text className=\"text-truncate\">\n                  {\" \"}\n                  <button class=\"content-button\">{post.contents}</button>{\" \"}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </div>\n        </div>\n      ))}\n    </div>\n  ) : (\n    <div className=\"container\">\n      <button class=\"goBack\" onClick={() => setViewPost(false)}>\n        Back\n      </button>\n      <CurrentPost\n        cardBody={selectedPost.cardBody}\n        cardTitle={selectedPost.cardTitle}\n        cardDate={selectedPost.cardDate}\n        author={selectedPost.author}\n        postId={selectedPost.postId}\n      />\n    </div>\n  );\n};\n","/home/antarma/brightspot/src/components/current-post.tsx",["83","84"],"/home/antarma/brightspot/src/comments.tsx",["85","86","87","88","89"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport firebase from \"../src/firebase\";\n\ntype props = {\n  postId: string;\n};\nexport const Comments: React.FC<props> = ({ postId }) => {\n  const [comments, setcomments] = React.useState([]);\n  const [viewcomment, setViewcomment] = React.useState(false);\n  const [articlePage, setArticlePage] = React.useState(\"\");\n  const [currentUser, setCurrentUser] = React.useState<any>();\n  //   const [selectedcomment, setSelectedcomment] = React.useState({});\n  React.useEffect(() => {\n    const currentUser = firebase?.auth()?.currentUser?.email;\n    setCurrentUser(currentUser);\n\n    const data = { postId: postId };\n    fetch(\"http://localhost:3014/getPostComment\", {\n      method: \"POST\",\n      headers: {\n        //accepts json\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json()) //converts to json\n      .then(\n        (result) => {\n          const newData = result;\n          setcomments(newData);\n        },\n        (error) => {\n          console.log(\"bro we got an error \" + error);\n        }\n      );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {comments.map((comment: any) => (\n        <div>\n          <Card>\n            {comment.author === currentUser && <button>edit</button>}\n\n            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n            <Card.Body>\n              {/* <Card.Title>{comment.title}</Card.Title> */}\n              <p>{new Date(comment?.date)?.toDateString()}</p>\n              <p>{comment?.author?.length > 0 ? comment.author : \"\"}</p>\n              <Card.Text>\n                {comment?.comment}\n                {/* {\" \"}\n                <button class=\"content-button\">{comment.contents}</button>{\" \"} */}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n",["90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":9,"column":10,"nodeType":"98","messageId":"99","endLine":9,"endColumn":18},{"ruleId":"96","severity":1,"message":"100","line":9,"column":20,"nodeType":"98","messageId":"99","endLine":9,"endColumn":27},{"ruleId":"96","severity":1,"message":"101","line":40,"column":9,"nodeType":"98","messageId":"99","endLine":40,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":30,"column":9,"nodeType":"104","messageId":"105","endLine":39,"endColumn":10},{"ruleId":"102","severity":1,"message":"103","line":49,"column":9,"nodeType":"104","messageId":"105","endLine":57,"endColumn":10},{"ruleId":"106","severity":1,"message":"107","line":78,"column":6,"nodeType":"108","endLine":78,"endColumn":8,"suggestions":"109"},{"ruleId":"96","severity":1,"message":"110","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"111","line":1,"column":10,"nodeType":"98","messageId":"99","endLine":1,"endColumn":32},{"ruleId":"96","severity":1,"message":"112","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":16},{"ruleId":"96","severity":1,"message":"113","line":4,"column":27,"nodeType":"98","messageId":"99","endLine":4,"endColumn":33},{"ruleId":"96","severity":1,"message":"114","line":4,"column":35,"nodeType":"98","messageId":"99","endLine":4,"endColumn":41},{"ruleId":"96","severity":1,"message":"115","line":4,"column":43,"nodeType":"98","messageId":"99","endLine":4,"endColumn":48},{"ruleId":"96","severity":1,"message":"116","line":4,"column":50,"nodeType":"98","messageId":"99","endLine":4,"endColumn":54},{"ruleId":"96","severity":1,"message":"117","line":11,"column":10,"nodeType":"98","messageId":"99","endLine":11,"endColumn":21},{"ruleId":"96","severity":1,"message":"118","line":11,"column":23,"nodeType":"98","messageId":"99","endLine":11,"endColumn":37},{"ruleId":"96","severity":1,"message":"111","line":1,"column":10,"nodeType":"98","messageId":"99","endLine":1,"endColumn":32},{"ruleId":"96","severity":1,"message":"112","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":16},{"ruleId":"96","severity":1,"message":"113","line":4,"column":27,"nodeType":"98","messageId":"99","endLine":4,"endColumn":33},{"ruleId":"96","severity":1,"message":"114","line":4,"column":35,"nodeType":"98","messageId":"99","endLine":4,"endColumn":41},{"ruleId":"96","severity":1,"message":"115","line":4,"column":43,"nodeType":"98","messageId":"99","endLine":4,"endColumn":48},{"ruleId":"96","severity":1,"message":"116","line":4,"column":50,"nodeType":"98","messageId":"99","endLine":4,"endColumn":54},{"ruleId":"96","severity":1,"message":"117","line":11,"column":10,"nodeType":"98","messageId":"99","endLine":11,"endColumn":21},{"ruleId":"96","severity":1,"message":"118","line":11,"column":23,"nodeType":"98","messageId":"99","endLine":11,"endColumn":37},{"ruleId":"119","severity":1,"message":"112","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":21,"column":10,"nodeType":"98","messageId":"99","endLine":21,"endColumn":18},{"ruleId":"119","severity":1,"message":"121","line":10,"column":10,"nodeType":"98","messageId":"99","endLine":10,"endColumn":21},{"ruleId":"119","severity":1,"message":"122","line":10,"column":23,"nodeType":"98","messageId":"99","endLine":10,"endColumn":37},{"ruleId":"119","severity":1,"message":"117","line":11,"column":10,"nodeType":"98","messageId":"99","endLine":11,"endColumn":21},{"ruleId":"119","severity":1,"message":"118","line":11,"column":23,"nodeType":"98","messageId":"99","endLine":11,"endColumn":37},{"ruleId":"106","severity":1,"message":"123","line":38,"column":6,"nodeType":"108","endLine":38,"endColumn":8,"suggestions":"124"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'showPost' is assigned a value but never used.","Identifier","unusedVar","'setPost' is assigned a value but never used.","'history' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'Component' is defined but never used.","'queryAllByDisplayValue' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'articlePage' is assigned a value but never used.","'setArticlePage' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'postData' is assigned a value but never used.","'viewcomment' is assigned a value but never used.","'setViewcomment' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [authListener]",{"range":"133","text":"134"},"Update the dependencies array to be: [postId]",{"range":"135","text":"136"},[1898,1900],"[authListener]",[1183,1185],"[postId]"]